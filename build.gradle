plugins {
    id 'java'
    id "io.freefair.lombok" version "4.0.1"
    id "com.github.johnrengelman.shadow" version "5.1.0"
    id 'jacoco'
    id 'checkstyle'
}

group 'progistar'
version '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.projectlombok:lombok:1.18.10")
    implementation("commons-cli:commons-cli:1.3.1")
    implementation("org.apache.commons:commons-csv:1.7")

    testImplementation("org.assertj:assertj-core:3.13.2")
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.5.2')
    testImplementation('org.mockito:mockito-junit-jupiter:3.0.0')
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.5.2')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.5.2')
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    afterEvaluate {
        getClassDirectories().setFrom(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/*Application*', '**/*Config*'])
        })
    }

    dependsOn test
}

jar {
    manifest {
        attributes 'Main-Class': 'progistar.moddecoder.starter.App'
    }
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output
            compileClasspath += main.compileClasspath
            compileClasspath += test.output
            compileClasspath += test.compileClasspath
            runtimeClasspath += test.runtimeClasspath
        }
    }
}

task integrationTest(type: Test) {
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    shouldRunAfter test
    useJUnitPlatform()
}
check.dependsOn integrationTest

task checkstyleAll(type: Test) {
    group = 'verification'
}
checkstyleAll.dependsOn checkstyleMain
checkstyleAll.dependsOn checkstyleTest
checkstyleAll.dependsOn checkstyleIntegrationTest
